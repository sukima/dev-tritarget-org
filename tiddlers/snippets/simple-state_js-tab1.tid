modified: 20191206115412000
created: 20191206042911000
creator: Sukima
modifier: Sukima
title: simple-state_js-tab1
tags: [[Simple State Machine]]
type: application/javascript
caption: StateMachine Class

function createMachine({ context = {}, id, initial, states = {} } = {}) {
  function stateFor({ target }, changed) {
    if (!target) { return; }
    let { meta = {} } = states[target] || {};
    return { value: target, meta, context, changed };
  }
  return {
    initialState: stateFor({ target: initial }, false),
    transition(state, transitionEvent) {
      let currentValue = (state && state.value) || state;
      let stateConfig = states[currentValue];
      if (!stateConfig) {
        throw new Error(
          `State '${currentValue}' not found on machine${id ? ` ${id}` : ''}`
        );
      }
      let { type: eventName = transitionEvent, value: eventValue } = transitionEvent;
      let transitions = stateConfig.on || {};
      let transition = transitions[eventName] || { target: currentValue, changed: false };
      let { target = transition, changed = true, cond = () => true } = transition;
      let stateEvent = { type: eventName, target, value: eventValue };
      let nextState = cond(context, stateEvent)
        ? stateFor(stateEvent, changed)
        : stateFor({ target: currentValue }, false);
      if (nextState.changed) {
        let targetStateConfig = states[target] || {};
        stateConfig.exit && stateConfig.exit(context, stateEvent);
        transition.action && transition.action(context, stateEvent);
        targetStateConfig.entry && targetStateConfig.entry(context, stateEvent);
      }
      return nextState;
    }
  };
}
