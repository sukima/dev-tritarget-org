title: sourcecode/split-by-line-stream.js
type: text/prs.sourcecode

<pre class="vimCodeElement">
<span class="Type">function</span> <span class="Identifier">splitByLines</span>() {
  <span class="Type">let</span> buffer <span class="Statement">=</span> <span class="Constant">''</span>;
  <span class="Statement">return</span> <span class="Statement">new</span> <span class="Identifier">Transform</span>({
    objectMode: <span class="Constant">true</span>,
    <span class="Identifier">transform</span>(chunk, _, done) {
      <span class="Statement">for</span> (<span class="Type">let</span> char <span class="Statement">of</span> chunk.<span class="Identifier">toString</span>()) {
        <span class="Statement">if</span> (char <span class="Statement">===</span> <span class="Constant">'</span><span class="Special">\r</span><span class="Constant">'</span>) <span class="Statement">continue</span>;
        <span class="Statement">if</span> (char <span class="Statement">===</span> <span class="Constant">'</span><span class="Special">\n</span><span class="Constant">'</span>) {
          <span class="Special">this</span>.<span class="Identifier">push</span>(buffer);
          buffer <span class="Statement">=</span> <span class="Constant">''</span>;
          <span class="Statement">continue</span>;
        }
        buffer <span class="Statement">+=</span> char;
      }
      <span class="Identifier">done</span>();
    },
    <span class="Identifier">flush</span>(done) {
      <span class="Statement">if</span> (buffer <span class="Statement">!==</span> <span class="Constant">''</span>) <span class="Special">this</span>.<span class="Identifier">push</span>(buffer);
      <span class="Identifier">done</span>();
    },
  });
}
</pre>
