title: sourcecode/webstreams-05.js
type: text/prs.sourcecode

<pre class="vimCodeElement">
<span class="Statement">class</span><span class="Identifier"> LineRenderer </span>{
  buffer <span class="Statement">=</span> [];
  <span class="Identifier">constructor</span>({ batchSize <span class="Statement">=</span> <span class="Constant">1</span> } = {}) {
    <span class="Special">this</span>.batchSize <span class="Statement">=</span> batchSize;
  }
  <span class="Identifier">queueLine</span>(line) {
    <span class="Special">this</span>.buffer.<span class="Identifier">push</span>(line);
    <span class="Statement">if</span> (<span class="Special">this</span>.buffer.length <span class="Statement">&lt;</span> batchSize) <span class="Statement">return</span>;
    <span class="Identifier">renderLines</span>(<span class="Special">this</span>.buffer);
    <span class="Special">this</span>.buffer <span class="Statement">=</span> [];
  }
  <span class="Identifier">flushLines</span>() {
    <span class="Statement">if</span> (<span class="Special">this</span>.buffer.length <span class="Statement">===</span> <span class="Constant">0</span>) <span class="Statement">return</span>;
    <span class="Identifier">renderLines</span>(<span class="Special">this</span>.buffer);
  }
  <span class="Identifier">stream</span>() {
    <span class="Statement">return</span> <span class="Statement">new</span> <span class="Identifier">WritableStream</span>({
      write: (chunk) <span class="Type">=&gt;</span> <span class="Special">this</span>.<span class="Identifier">queueLine</span>(chunk),
      close: <span class="Type">()</span> <span class="Type">=&gt;</span> <span class="Special">this</span>.<span class="Identifier">flushLines</span>(),
    });
  }
}

file
  .<span class="Identifier">stream</span>()
  .<span class="Identifier">pipeThrough</span>(<span class="Statement">new</span> <span class="Identifier">TextDecoderStream</span>())
  .<span class="Identifier">pipeThrough</span>(<span class="Statement">new</span> <span class="Identifier">LineChunks</span>().<span class="Identifier">stream</span>())
  .<span class="Identifier">pipeTo</span>(<span class="Statement">new</span> <span class="Identifier">LineRenderer</span>({ batchSize: <span class="Constant">50</span> }).<span class="Identifier">stream</span>());
</pre>
