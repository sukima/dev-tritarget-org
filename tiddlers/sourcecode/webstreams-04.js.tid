title: sourcecode/webstreams-04.js
type: text/prs.sourcecode

<pre class="vimCodeElement">
<span class="Statement">class</span><span class="Identifier"> LineChunks </span>{
  buffer <span class="Statement">=</span> <span class="Constant">''</span>;
  <span class="Identifier">flushBuffer</span>(controller) {
    <span class="Statement">if</span> (<span class="Special">this</span>.buffer <span class="Statement">===</span> <span class="Constant">''</span>) <span class="Statement">return</span>;
    controller.<span class="Identifier">enqueue</span>(<span class="Special">this</span>.buffer);
  }
  <span class="Identifier">processChunk</span>(chunk, controller) {
    <span class="Special">this</span>.buffer <span class="Statement">+=</span> chunk;
    <span class="Type">let</span> lines <span class="Statement">=</span> <span class="Special">this</span>.buffer.<span class="Identifier">split</span>(<span class="Constant">'</span><span class="Special">\n</span><span class="Constant">'</span>);
    <span class="Statement">while</span> (lines.length <span class="Statement">&gt;</span> <span class="Constant">1</span>)
      controller.<span class="Identifier">enqueue</span>(lines.<span class="Identifier">shift</span>());
    <span class="Special">this</span>.buffer <span class="Statement">=</span> lines[<span class="Constant">0</span>];
  }
  <span class="Identifier">stream</span>() {
    <span class="Statement">return</span> <span class="Statement">new</span> <span class="Identifier">TransformStream</span>({
      transform: (chunk, controller) <span class="Type">=&gt;</span>
        <span class="Special">this</span>.<span class="Identifier">processChunk</span>(chunk, controller),
      flush: (controller) <span class="Type">=&gt;</span>
        <span class="Special">this</span>.<span class="Identifier">flushBuffer</span>(controller),
    });
  }
}

file
  .<span class="Identifier">stream</span>()
  .<span class="Identifier">pipeThrough</span>(<span class="Statement">new</span> <span class="Identifier">TextDecoderStream</span>())
  .<span class="Identifier">pipeThrough</span>(<span class="Statement">new</span> <span class="Identifier">LineChunks</span>().<span class="Identifier">stream</span>())
  .<span class="Identifier">pipeTo</span>(<span class="Statement">new</span> <span class="Identifier">CustomConsoleWriter</span>().<span class="Identifier">stream</span>());
</pre>
