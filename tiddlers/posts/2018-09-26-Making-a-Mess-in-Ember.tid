creator: Sukima
created: 20180926123122000
modified: 20180926123122000
tags: Article Ember JavaScript Coding
title: Making a Mess in Ember
type: text/vnd.tiddlywiki

\define OOP() <abbr title="Object Orientated Programming">OOP</abbr>
\define video() {{$:/core/images/video}}

I've been a big fan of [[Sandi Metz|https://www.sandimetz.com/]] for quite some time. I've tried to watch every talk I can find on ~YouTube. In doing so I've notice several common themes, one of them is about ''dependency injections''.

In her talks she describes dependency injection as an <<OOP>> pattern that helps decouple the complexity people find in their programs. She describes two examples for dependency injection: ''Roles'' and ''Factories''.

Ember offers a very robust system for dependency injection but it is often not realized in most apps. It is a public API but is not something described by the documentation.

! Roles

[[Ember's Object Model|EmberObject]] allows one to not only extend the objects but also override properties at creation time. In fact Ember's [[action closures|http://miguelcamba.com/blog/2016/01/24/ember-closure-actions-in-depth]] allow you to assign/override behavior on components by passing them functions. Ember also offers a dependency injection system. An example of this are services. When you tell an EmberObject that a property is a `service()` it will perform the dependency injection code under the hood for you. In this section I'd like to show you how that dependency injection works and how to use it in cases other then services.



! Factories


!! Sandi Metz Talks

* [["Go Ahead, Make a Mess"|https://www.youtube.com/watch?v=mpA2F1In41w]] <<video>>
* [["All the Little Things"|https://www.youtube.com/watch?v=8bZh5LMaSmE]] <<video>>
* [["Nothing is Something"|https://www.youtube.com/watch?v=OMPfEXIlTVE]] <<video>>
